{"operations":{"getUsers":{"method":"get","path":"/users","data":{"summary":"Returns a list of users.","operationId":"getUsers","tags":["users","paginated"],"parameters":[{"$ref":"#/components/parameters/Cursor"},{"$ref":"#/components/parameters/Limit"}],"responses":{"200":{"description":"A JSON array of users.","content":{"application/json":{"schema":{"type":"object","required":["links","data"],"properties":{"links":{"$ref":"#/components/schemas/PaginationLinks"},"data":{"type":"array","items":{"$ref":"#/components/schemas/User"}}}}}}}}}},"createUser":{"method":"post","path":"/users","data":{"summary":"Creates a new user.","operationId":"createUser","tags":["users","authenticated"],"requestBody":{"$ref":"#/components/requestBodies/UserBody"},"responses":{"200":{"description":"The returned user.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}}},"400":{"description":"Invalid new user data was submitted."}}}},"getRooms":{"method":"get","path":"/rooms","data":{"summary":"Returns a list of \"Shoevox\" rooms","operationId":"getRooms","tags":["rooms","paginated"],"parameters":[{"$ref":"#/components/parameters/Cursor"},{"$ref":"#/components/parameters/Limit"}],"responses":{"200":{"description":"A JSON array of ShoeVox data objects","content":{"application/json":{"schema":{"type":"object","required":["links","data"],"properties":{"links":{"$ref":"#/components/schemas/PaginationLinks"},"data":{"type":"array","items":{"$ref":"#/components/schemas/Room"}}}}}}}}}},"getUserById":{"method":"get","path":"/users/{userid}","data":{"summary":"Returns a user by their user id.","operationId":"getUserById","tags":["users"],"responses":{"200":{"description":"A JSON representation of a User.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}}},"404":{"description":"User could not be found."}}}},"updateUser":{"method":"put","path":"/users/{userid}","data":{"summary":"Updates a user.","operationId":"updateUser","tags":["users","authenticated","authorized"],"requestBody":{"$ref":"#/components/requestBodies/UserBody"},"responses":{"200":{"description":"A JSON representation of the updated User.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}}},"400":{"description":"Invalid value."},"403":{"description":"Client did not have required permissions to update user."},"404":{"description":"User could not be found."}}}},"deleteUser":{"method":"delete","path":"/users/{userid}","data":{"tags":["users","authenticated","authorized"],"summary":"Deletes a user.","operationId":"deleteUser","responses":{"200":{"description":"The deleted User.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}}},"403":{"description":"Client did not have required permissions to delete user."},"404":{"description":"User could not be found."}}}},"getRoomsByUserId":{"method":"get","path":"/users/{userid}/rooms","data":{"summary":"Gets all the rooms created by a given User.","operationId":"getRoomsByUserId","tags":["users","rooms","paginated"],"parameters":[{"$ref":"#/components/parameters/Cursor"},{"$ref":"#/components/parameters/Limit"}],"responses":{"200":{"description":"List of Rooms.","content":{"application/json":{"schema":{"type":"object","required":["links","data"],"properties":{"links":{"$ref":"#/components/schemas/PaginationLinks"},"data":{"type":"array","items":{"$ref":"#/components/schemas/Room"}}}}}}},"404":{"description":"User not found."}}}},"createRoom":{"method":"post","path":"/users/{userid}/rooms","data":{"summary":"Posts a new Room under the given User.","operationId":"createRoom","tags":["users","rooms","authenticated","authorized"],"requestBody":{"$ref":"#/components/requestBodies/RoomBody"},"responses":{"200":{"description":"The newly created Room.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Room"}}}},"400":{"description":"Could not create Room due to malformed data."},"403":{"description":"Could not create Room under given User due to insufficient permissions."},"404":{"description":"Could not create Room because given User could not be found."}}}},"getFriendships":{"method":"get","path":"/users/{userid}/friendships","data":{"summary":"Returns a list of users. Client ID must match {userid}.","operationId":"getFriendships","tags":["users","friendships","paginated","authenticated","authorized"],"parameters":[{"$ref":"#/components/parameters/Cursor"},{"$ref":"#/components/parameters/Limit"}],"responses":{"200":{"description":"A JSON array of Friendship objects.","content":{"application/json":{"schema":{"type":"object","required":["links","data"],"properties":{"links":{"$ref":"#/components/schemas/PaginationLinks"},"data":{"type":"array","items":{"$ref":"#/components/schemas/Friendship"}}}}}}},"403":{"description":"Client did not have permission to access User's Friendships."},"404":{"description":"User not found."}}}},"createFriendship":{"method":"post","path":"/users/{userid}/friendships","data":{"summary":"Sends Friend request.","description":"Creates a Friendship object where the Requester is the CLIENT user and the Recipient is the {userid}. The status is 'PENDING'.\n","operationId":"createFriendship","tags":["users","friendships","authenticated","authorized"],"responses":{"200":{"description":"The Friendship object created.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Friendship"}}}},"404":{"description":"User not found."}}}},"deleteFriendship":{"method":"delete","path":"/friendships/{friendshipid}","data":{"summary":"Deletes a Friendship from a User's friends list.","operationId":"deleteFriendship","tags":["users","friendships","authenticated","authorized"],"parameters":[{"name":"is","description":"The authenticated user's relationship to the returned friendship request.","in":"query","required":true,"schema":{"type":"string","enum":["recipient","requester"]}}],"responses":{"200":{"description":"Returns the successfully deleted Friend.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/User"}}}},"403":{"description":"Client did not have required permissions to delete Friend."},"404":{"description":"User or Friend could not be found."}}}},"updateFriendship":{"method":"patch","path":"/friendships/{friendshipid}","data":{"summary":"Accepts or Rejects an existing Friend request.","description":"Patches the `status` property of an existing Friendship object to be either 'ACCEPTED' or 'REJECTED'. CLIENT ID must match recipient for 'ACCEPTED' to be valid. CLIENT ID must match recipient or requester for 'REJECTED' to be valid.\n","operationId":"updateFriendship","tags":["users","friendships","authenticated","authorized"],"requestBody":{"description":"A JSON object containing info necessary to update a Friendship record.","required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string","enum":["ACCEPTED","REJECTED"]},"is":{"type":"string","enum":["recipient","requester"]}}}}}},"responses":{"200":{"description":"The updated Friendship object.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Friendship"}}}},"400":{"description":"Invalid value."},"403":{"description":"Client not authorized to update Friend Request status."},"404":{"description":"User not found."}}}},"getRoomById":{"method":"get","path":"/rooms/{roomid}","data":{"summary":"Gets a room by its ID.","operationId":"getRoomById","tags":["rooms"],"responses":{"200":{"description":"Returns a room.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Room"}}}},"404":{"description":"Room with requested ID could not be found."}}}},"updateRoom":{"method":"patch","path":"/rooms/{roomid}","data":{"summary":"Updates a room by its ID.","operationId":"updateRoom","tags":["rooms","authenticated","authorized"],"requestBody":{"$ref":"#/components/requestBodies/RoomBody"},"responses":{"200":{"description":"Returns the successfully updated room.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Room"}}}},"400":{"description":"Invalid value."},"403":{"description":"Client did not have required permissions to update room."},"404":{"description":"Room could not be found."}}}},"deleteRoom":{"method":"delete","path":"/rooms/{roomid}","data":{"summary":"Deletes a room by its ID.","operationId":"deleteRoom","tags":["rooms","authenticated","authorized"],"responses":{"200":{"description":"Returns the successfully deleted room.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Room"}}}},"403":{"description":"Client did not have required permissions to delete room."},"404":{"description":"Room could not be found."}}}},"getCommentsByRoomId":{"method":"get","path":"/rooms/{roomid}/comments","data":{"summary":"Gets the list of comments for a room.","operationId":"getCommentsByRoomId","tags":["rooms","comments","paginated"],"parameters":[{"$ref":"#/components/parameters/Cursor"},{"$ref":"#/components/parameters/Limit"}],"responses":{"200":{"description":"Returns the list of comments.","content":{"application/json":{"schema":{"type":"object","required":["links","data"],"properties":{"links":{"$ref":"#/components/schemas/PaginationLinks"},"data":{"type":"array","items":{"$ref":"#/components/schemas/Comment"}}}}}}},"404":{"description":"Room could not be found."}}}},"createComment":{"method":"post","path":"/rooms/{roomid}/comments","data":{"summary":"Creates comment on room.","operationId":"createComment","tags":["rooms","comments","authenticated"],"requestBody":{"$ref":"#/components/requestBodies/CommentBody"},"responses":{"200":{"description":"Returns the successfully posted comment.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Comment"}}}},"400":{"description":"Invalid data."},"403":{"description":"Client was could not be authenticated."},"404":{"description":"Room could not be found."}}}},"getLikesByRoomId":{"method":"get","path":"/rooms/{roomid}/likes","data":{"summary":"Gets a list of Likes on a Room.","operationId":"getLikesByRoomId","tags":["rooms","likes","paginated"],"parameters":[{"$ref":"#/components/parameters/Cursor"},{"$ref":"#/components/parameters/Limit"}],"responses":{"200":{"description":"Returns a list of Likes on a Room.","content":{"application/json":{"schema":{"type":"object","required":["links","data"],"properties":{"links":{"$ref":"#/components/schemas/PaginationLinks"},"data":{"type":"array","items":{"$ref":"#/components/schemas/Like"}}}}}}},"404":{"description":"Room not found."}}}},"createLike":{"method":"post","path":"/rooms/{roomid}/likes","data":{"summary":"Adds a Like on a Room.","operationId":"createLike","tags":["rooms","likes","authenticated"],"responses":{"200":{"description":"Returns the successfully added Like.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Like"}}}},"403":{"description":"Attempted to like while not authenticated."},"404":{"description":"Room not found."}}}},"deleteComment":{"method":"delete","path":"/comments/{commentid}","data":{"summary":"Delete given comment.","operationId":"deleteComment","tags":["comments","authenticated","authorized"],"responses":{"200":{"description":"Returns the successfully deleted comment.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Comment"}}}},"403":{"description":"Client did not have the required permissions to delete comment."},"404":{"description":"Comment could not be found."}}}},"deleteLike":{"method":"delete","path":"/likes/{likeid}","data":{"summary":"Delete given Like.","operationId":"deleteLike","tags":["likes","authenticated","authorized"],"responses":{"200":{"description":"Returns the successfully deleted Like.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Like"}}}},"403":{"description":"Client did not have the required permissions to delete Like."},"404":{"description":"Like could not be found."}}}}},"info":{"title":"VoxelAtlas API","description":"**VoxelAtlas** is an open-source social 3D worldbuilding website.","version":"0.1.0"},"servers":[{"url":"http://localhost:5432/v1","description":"Local development url."}],"components":{"schemas":{"Id":{"type":"string"},"User":{"type":"object","required":["username","createdAt","id"],"properties":{"username":{"type":"string","minLength":3,"maxLength":15},"createdAt":{"$ref":"#/components/schemas/Timestamp"},"id":{"$ref":"#/components/schemas/Id"}}},"Room":{"type":"object","required":["title","url","creator","createdAt","id"],"properties":{"title":{"type":"string","minLength":3,"maxLength":100},"url":{"type":"string"},"creator":{"$ref":"#/components/schemas/User"},"createdAt":{"$ref":"#/components/schemas/Timestamp"},"id":{"$ref":"#/components/schemas/Id"},"likes":{"type":"number"}}},"Comment":{"type":"object","required":["content","user","room","id","createdAt"],"properties":{"content":{"type":"string","minLength":3,"maxLength":140},"user":{"$ref":"#/components/schemas/User"},"room":{"$ref":"#/components/schemas/Id"},"id":{"$ref":"#/components/schemas/Id"},"createdAt":{"$ref":"#/components/schemas/Timestamp"}}},"Like":{"type":"object","required":["user","createdAt","room","id"],"properties":{"user":{"$ref":"#/components/schemas/User"},"createdAt":{"$ref":"#/components/schemas/Timestamp"},"room":{"$ref":"#/components/schemas/Id"},"id":{"$ref":"#/components/schemas/Id"}}},"Friendship":{"type":"object","required":["requester","recipient","status","createdAt","id"],"properties":{"requester":{"$ref":"#/components/schemas/Id"},"recipient":{"$ref":"#/components/schemas/Id"},"status":{"$ref":"#/components/schemas/FriendshipStatus"},"createdAt":{"$ref":"#/components/schemas/Timestamp"},"id":{"$ref":"#/components/schemas/Id"}}},"FriendshipStatus":{"type":"string","enum":["ACCEPTED","PENDING","REJECTED"]},"Timestamp":{"type":"string","format":"date-time"},"PaginationLinks":{"type":"object","properties":{"next":{"type":"object","required":["href"],"properties":{"href":{"type":"string","format":"url"},"cursor":{"type":"string"}}}}}},"requestBodies":{"UserBody":{"description":"A JSON object containing info necessary to create/update a User record.","required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"username":{"type":"string","minLength":3,"maxLength":15}}}}}},"RoomBody":{"description":"An object containing info necessary to create/update a Room record.","required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"title":{"type":"string","minLength":3,"maxLength":100}}}}}},"CommentBody":{"description":"A JSON object containing info necessary to create a Comment record.","required":true,"content":{"application/json":{"schema":{"type":"object","properties":{"content":{"type":"string","minLength":3,"maxLength":140}}}}}}},"parameters":{"Cursor":{"name":"cursor","in":"query","description":"A cursor for pagination queries.","schema":{"type":"string"}},"Limit":{"name":"limit","in":"query","description":"The number of items to return in a paginated request.","schema":{"type":"number","minimum":1,"maximum":100,"default":20}}}}}